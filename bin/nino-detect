#!/bin/bash

# nino-detect
# run with sudo as pi user
# v0.1 010520 etg - initial write, untested with multiple tncs

ndir=/home/pi/nino-tnc
ndir=/tmp/nino-tnc
piuser=indeo
piuser=$(whoami)
devserdir=/dev/serial/by-id

VERSION=012219a
DO_RESET=0
DEBUG=0
LIST_TNCS=0
APPLY_CHANGES=0

function nt_init()
{
 if ! [ $(id -u) -eq 0 ]; then
  echo must be run as root or with sudo
  exit 1
 fi
 mkdir -pv $ndir && chown $piuser:$piuser $ndir && chmod 770 $ndir
 if ! [ -d $devserdir ]; then
  echo no serial devices found
  exit 1
 fi
 if [ $DEBUG -eq 1 ]; then
  echo ndir=$ndir - list:
  find $ndir/ -ls
 fi
}

function nt_reset()
{
 if [ -d $ndir/ ]; then
  find $ndir/ -type l -ls -delete
 fi
}

usage()
 {
  echo $(basename $0) v$VERSION
  echo -e "
\t-d\tdebug mode
\t-r\treset all memories
\t-l\tlist current connected TNCs and memories
\t-a\tdetect and apply new changes
\t-h\thelp
  "
 }

while getopts "drlah" o; do
 case $o in
  d) DEBUG=1; echo debugging mode enabled; ;;
  r) DO_RESET=1; ;;
  l) LIST_TNCS=1; ;;
  a) APPLY_CHANGES=1; ;;
  h) usage; exit 0; ;;
  *) echo invalid arg $o; usage; exit 1; ;;
 esac
done


## main

nt_init

if [ $DO_RESET -eq 1 ]; then
 nt_reset
fi

for d in $devserdir/*; do
 echo $d  # d = devices in device serial directory
 if [ -r $ndir/sm01 ]; then  # if sm01 exists,
  for f in $ndir/*; do
   l=$(ls -la $f | awk '{print $NF}')  # l = line in ls output
   if [ $DEBUG -eq 1 ]; then
    echo l = "$l"
    echo d = "$d"
   fi
   if [ "$l" == "$d" ]; then
    echo continue 2
    continue 2
   else
    echo continue 1
    continue 1
   fi
   for x in {02..99}; do
    if ! [ -r $ndir/sm${x} ]; then
     ln -sv $d $ndir/sm
     continue 2
    fi
   done
  done
 else
  ln -sv $d $ndir/sm01
  continue 2
 fi
done



